Sub ProcessErrors()
    Dim wsDB As Worksheet, wsSOP As Worksheet
    Dim lastRowDB As Long, lastRowSOP As Long, i As Long, j As Long
    Dim errorText As String, vendorText As String, status As String, resolution As String
    Dim sopDict As Object
    Dim descText As String
    Dim regexError As Object, regexVendor As Object, regexNumbers As Object, regexInvoice As Object
    Dim matches As Object
    Dim rng As Range

    Set wsDB = ThisWorkbook.Sheets("DB_Errors")
    Set wsSOP = ThisWorkbook.Sheets("SOP_Errors")

    lastRowDB = wsDB.Cells(wsDB.Rows.Count, 1).End(xlUp).Row
    lastRowSOP = wsSOP.Cells(wsSOP.Rows.Count, 1).End(xlUp).Row

    Set sopDict = CreateObject("Scripting.Dictionary")

    For j = 2 To lastRowSOP
        If Not IsEmpty(wsSOP.Cells(j, 1).Value) Then
            sopDict(wsSOP.Cells(j, 1).Value) = wsSOP.Cells(j, 2).Value
        End If
    Next j

    ' Headers L to Q
    wsDB.Cells(1, 12).Value = "Description"
    wsDB.Cells(1, 13).Value = "Error Type"
    wsDB.Cells(1, 14).Value = "Vendor Name"
    wsDB.Cells(1, 15).Value = "Invoice Number"
    wsDB.Cells(1, 16).Value = "Status"
    wsDB.Cells(1, 17).Value = "Resolution Comments"

    wsDB.Range("L1:Q1").Font.Bold = True
    wsDB.Range("L1:Q1").Interior.Color = RGB(255, 255, 0)

    ' Regex objects
    Set regexError = CreateObject("VBScript.RegExp")
    regexError.Pattern = "(Error#.*)"
    regexError.IgnoreCase = True
    regexError.Global = False

    Set regexNumbers = CreateObject("VBScript.RegExp")
    regexNumbers.Pattern = "\d"
    regexNumbers.IgnoreCase = True
    regexNumbers.Global = False

    Set regexVendor = CreateObject("VBScript.RegExp")
    regexVendor.Pattern = "(Vendor#\s*(\w+\s*\w*))"
    regexVendor.IgnoreCase = True
    regexVendor.Global = False

    ' âœ… Updated to support alphanumeric invoice numbers
    Set regexInvoice = CreateObject("VBScript.RegExp")
    regexInvoice.Pattern = "(Invoice#\s*[A-Za-z0-9]+)"
    regexInvoice.IgnoreCase = True
    regexInvoice.Global = False

    ' Loop through data
    For i = 2 To lastRowDB
        descText = ""
        For j = 1 To 11
            If Not IsEmpty(wsDB.Cells(i, j).Value) Then
                descText = descText & wsDB.Cells(i, j).Value & vbNewLine
            End If
        Next j

        ' Description column
        wsDB.Cells(i, 12).Value = descText
        wsDB.Cells(i, 12).WrapText = True
        wsDB.Cells(i, 12).Interior.Color = RGB(255, 255, 255)

        ' Error Type
        errorText = ""
        If regexError.Test(descText) Then
            Set matches = regexError.Execute(descText)
            If matches.Count > 0 Then
                errorText = matches(0).SubMatches(0)
                If regexNumbers.Test(errorText) Then
                    errorText = ""
                End If
            End If
        End If
        wsDB.Cells(i, 13).Value = errorText

        ' Vendor Name
        vendorText = ""
        If regexVendor.Test(descText) Then
            Set matches = regexVendor.Execute(descText)
            If matches.Count > 0 Then
                vendorText = matches(0).SubMatches(1)
            End If
        End If
        wsDB.Cells(i, 14).Value = vendorText

        ' Invoice Number
        Dim invoiceText As String
        invoiceText = ""
        If regexInvoice.Test(descText) Then
            Set matches = regexInvoice.Execute(descText)
            If matches.Count > 0 Then
                invoiceText = matches(0).SubMatches(0)
            End If
        End If
        wsDB.Cells(i, 15).Value = invoiceText

        ' SOP matching
        resolution = ""
        status = ""
        For Each key In sopDict.Keys
            If InStr(descText, key) > 0 Then
                resolution = sopDict(key)
                status = "Matched"
                Exit For
            End If
        Next key
        If resolution = "" Then status = "Unmatched"

        wsDB.Cells(i, 16).Value = status
        wsDB.Cells(i, 17).Value = resolution

        ' Conditional formatting
        If status = "Matched" Then
            wsDB.Cells(i, 16).Interior.Color = RGB(144, 238, 144) ' Light green
        ElseIf status = "Unmatched" Then
            wsDB.Cells(i, 16).Interior.Color = RGB(255, 182, 193) ' Light red
        End If

        ' Autofit current row (only row 2 onwards)
        wsDB.Rows(i).AutoFit
    Next i

    ' Column formatting
    wsDB.Columns("L").ColumnWidth = 50
    wsDB.Columns("L").WrapText = True
    wsDB.Columns("N").ColumnWidth = 20
    wsDB.Columns("O").ColumnWidth = 25
    wsDB.Columns("M:Q").AutoFit

    ' Apply borders to L and P columns
    Dim borderColumns As Variant
    borderColumns = Array("L", "P")
    For Each col In borderColumns
        Set rng = wsDB.Range(col & "1:" & col & lastRowDB)
        With rng.Borders
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
    Next col

    ' Align M to O
    wsDB.Range("M2:O" & lastRowDB).HorizontalAlignment = xlLeft
    wsDB.Range("M2:O" & lastRowDB).VerticalAlignment = xlTop

    ' Freeze panes from L2 to preserve headers
    wsDB.Activate
    wsDB.Range("L2").Select
    ActiveWindow.FreezePanes = True

    ' Cleanup
    Set sopDict = Nothing
    Set regexError = Nothing
    Set regexVendor = Nothing
    Set regexNumbers = Nothing
    Set regexInvoice = Nothing

    MsgBox "Error processing completed!", vbInformation, "Process Complete"
End Sub
